name: CI

on:
  pull_request:
  push:
    branches:
      - master

# pushing new commits to a PR should cancel currently running CI jobs
# NOTE: This option makes it more difficult to devs to run CI on every commit in
# a PR, but can be re-enabled if CI cost becomes an issue
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# TODO(phlip9): read-all?
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: read

env:
  # Fail CI even on rustc "warning" lints
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  LEXE_RUST_VERSION: nightly-2022-10-27

jobs:

  # FIXME: Cargo is not picking up .cargo/config.toml, hence RUSTFLAGS is used
  # whenever the target is SGX

  # --- Linting the whole workspace --- #
  clippy:
    runs-on: ubuntu-20.04
    env:
      # skip flutter_rust_bridge codegen since it requires flutter installed
      # and doesn't affect the output, since the generated Rust outputs should
      # be checked in.
      CI_SKIP_FRB_CODEGEN: 1
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.LEXE_RUST_VERSION }}
          targets: x86_64-fortanix-unknown-sgx
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
      # Native
      - run: cargo clippy --locked --workspace
      # Native + tests
      - run: cargo clippy --locked --workspace --tests
      # SGX
      - run: RUSTFLAGS="-C target-feature=+aes,+ssse3 -D warnings" cargo clippy --locked -p node -p common -p lexe-ln --target=x86_64-fortanix-unknown-sgx
      # SGX + tests
      - run: RUSTFLAGS="-C target-feature=+aes,+ssse3 -D warnings" cargo clippy --locked -p node -p common -p lexe-ln --target=x86_64-fortanix-unknown-sgx --tests

  # --- Checking that end binaries compile without feature unification --- #
  check:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.LEXE_RUST_VERSION }}
          targets: x86_64-fortanix-unknown-sgx
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
      # Utils
      - run: cargo check --locked -p run-sgx
      # Node
      - run: RUSTFLAGS="-C target-feature=+aes,+ssse3 -D warnings" cargo check --locked -p node --target=x86_64-fortanix-unknown-sgx

  test:
    runs-on: ubuntu-20.04
    env:
      CI_SKIP_FRB_CODEGEN: 1
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.LEXE_RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
      - run: cargo test --locked -- -Zunstable-options --report-time

  fmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.LEXE_RUST_VERSION }}
      - run: cargo fmt --all -- --check

  doc:
    runs-on: ubuntu-20.04
    env:
      CI_SKIP_FRB_CODEGEN: 1
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.LEXE_RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - uses: arduino/setup-protoc@v1
      - run: cargo doc --locked --no-deps --document-private-items
