# `gal` requires at least macOS 11.0
# <https://pub.dev/packages/gal>
# `flutter_zxing` requires at least macOS 10.15
# <https://pub.dev/packages/flutter_zxing#supported-platforms>
platform :osx, '11.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,

  # "design" mode flavor
  'Debug-design' => :debug,
  'Profile-design' => :release,
  'Release-design' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  # `pods_project` refers to the `Pods` auto-generated project (I believe).
  installer.pods_project.targets.each do |target|
    # `target` is each Podfile dependency, which includes those injected via
    # flutter native plugins.

    flutter_additional_macos_build_settings(target)

    if target.name == "flutter_zxing"
      target.build_configurations.each do |config|
        # See: the full reference for XCode build_settings:
        # <https://developer.apple.com/documentation/xcode/build-settings-reference>
        
        # Silence some useless warnings.
        config.build_settings["CLANG_WARN_DOCUMENTATION_COMMENTS"] = "NO"
        config.build_settings["CLANG_WARN_COMMA"] = "NO"
        # These warnings are a little more suspicious... silence them anyway.
        config.build_settings["GCC_WARN_UNINITIALIZED_AUTOS"] = "NO"
        config.build_settings["GCC_WARN_64_TO_32_BIT_CONVERSION"] = "NO"
      end
    end
  end
end
