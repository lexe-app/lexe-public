plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace "app.lexe.lexeapp"
    // compileSdk flutter.compileSdkVersion
    compileSdk 34

    // println "app: flutter.compileSdkVersion: ${flutter.compileSdkVersion}"

    // Needs to match the value in `app_rs_dart/android/build.gradle`.
    ndkVersion "26.3.11579264"
    // ndkVersion flutter.ndkVersion

    // println "app: flutter.ndkVersion: ${flutter.ndkVersion}"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "app.lexe.lexeapp"

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.

        // `super_clipboard` requires at least Android 23
        // <https://pub.dev/packages/super_clipboard#android-support>
        //
        // `flutter_zxing` requires at least Android 21
        // <https://pub.dev/packages/flutter_zxing#supported-platforms>
        minSdkVersion 23
        // minSdkVersion flutter.minSdkVersion

        targetSdkVersion flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    // Comment this out to force flutter to produce an unsigned appbundle. We'll
    // sign the appbundle with our own tooling.
    // buildTypes {
    //     release {
    //         // Signing with the debug keys for now, so
    //         // `flutter run --release` works.
    //         signingConfig signingConfigs.debug
    //     }
    // }

    flavorDimensions "flavor"

    // We're now using different application "flavors" to differentiate
    // prod/staging/dev/design instead of flutter `--dart-define` args.
    //
    // The key advantage is that each flavor gets its own separately installed
    // app on-device. This way we can have multiple flavors installed
    // simultaneously. The app variants then don't step on each other's toes.
    productFlavors {
        // (Default) Local development against a local lexe backend.
        dev {
            dimension "flavor"
            // The app name. ex: displayed under the icon on the user's home screen.
            resValue "string", "app_name", "Lexe Dev"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"

            // AndroidManifest.xml requires this value to be set, even though
            // local dev doesn't use gDrive.
            resValue "string", "google_callback_uri_scheme", "DUMMY"
        }

        // Lexe testnet/staging backend.
        staging {
            dimension "flavor"
            // The app name. ex: displayed under the icon on the user's home screen.
            resValue "string", "app_name", "Lexe Staging"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"

            // The google drive oauth2 callback URI scheme
            // Keep in sync with <app/lib/gdrive_auth.dart::_GDriveCredentials>
            // Signer: <debug>
            resValue "string", "google_callback_uri_scheme", "com.googleusercontent.apps.495704988639-fvkq7thnksbqi7n3tanpopu5brr2pa4a"
        }

        // Lexe mainnet/production backend.
        prod {
            dimension "flavor"
            // The app name. ex: displayed under the icon on the user's home screen.
            resValue "string", "app_name", "Lexe"

            // The google drive oauth2 callback URI scheme
            // Keep in sync with <app/lib/gdrive_auth.dart::_GDriveCredentials>
            // Signer: <Google Play>
            resValue "string", "google_callback_uri_scheme", "com.googleusercontent.apps.495704988639-cr7bvcr117n7aks3p3e3qntoa7ps0lj1"
        }

        // Lexe design mode.
        design {
            dimension "flavor"
            // The app name. ex: displayed under the icon on the user's home screen.
            resValue "string", "app_name", "Lexe Design"
            applicationIdSuffix ".design"
            versionNameSuffix "-design"

            // The google drive oauth2 callback URI scheme
            // Keep in sync with <app/lib/gdrive_auth.dart::_GDriveCredentials>
            // Signer: <debug>
            resValue "string", "google_callback_uri_scheme", "com.googleusercontent.apps.495704988639-qhjbk0nkfaibgr16h0gimlqcae8cl13e"
        }
    }
}

flutter {
    source "../.."
}
