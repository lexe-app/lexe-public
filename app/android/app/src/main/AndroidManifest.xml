<!-- TODO(phlip9): get backtraces working...
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="${applicationId}">

    <application
        ..
        tools:replace="android:extractNativeLibs"
        android:extractNativeLibs="true" >
-->

<manifest
  xmlns:android="http://schemas.android.com/apk/res/android"
  package="${applicationId}">

  <application
    android:label="@string/app_name"
    android:name="${applicationName}"
    android:icon="@mipmap/ic_launcher" >

    <!-- The root activity for Lexe.

         `flutter_web_auth_2`: Removed `taskAffinity` key and went back to
         default `launchMode=singleTop`. -->
    <activity
      android:name=".MainActivity"
      android:exported="true"
      android:launchMode="singleTop"
      android:theme="@style/LaunchTheme"
      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
      android:hardwareAccelerated="true"
      android:windowSoftInputMode="adjustResize">
      <!-- Specifies an Android theme to apply to this Activity as soon as
           the Android process has started. This theme is visible to the user
           while the Flutter UI initializes. After that, this theme continues
           to determine the Window background behind the Flutter UI. -->
      <meta-data
        android:name="io.flutter.embedding.android.NormalTheme"
        android:resource="@style/NormalTheme"
        />
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
        </intent-filter>

      <!-- Register Lexe as a handler for "bitcoin:", "lightning:", etc... URIs-->
      <intent-filter>
        <action android:name="android.intent.action.VIEW" />
        <category android:name="android.intent.category.DEFAULT" />
        <category android:name="android.intent.category.BROWSABLE" />

        <data android:scheme="BITCOIN" />
        <data android:scheme="LIGHTNING" />
        <data android:scheme="bitcoin" />
        <data android:scheme="lightning" />
        </intent-filter>

      </activity>
    <!-- Don't delete the meta-data below.
         This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
    <meta-data
      android:name="flutterEmbedding"
      android:value="2" />

    <!-- Google Drive oauth2 flow callback Activity -->
    <activity
      android:name="com.linusu.flutter_web_auth_2.CallbackActivity"
      android:exported="true">
      <intent-filter android:label="flutter_web_auth_2">
        <action android:name="android.intent.action.VIEW" />
        <category android:name="android.intent.category.DEFAULT" />
        <category android:name="android.intent.category.BROWSABLE" />
        <!-- The URI scheme the user gets redirected to after completing the
             gdrive authz flow.

             Since each app flavor uses a different `applicationId` and each
             google client_id is tied to a specific app id, we need to use a
             separate client_id per "flavor".

             Consequently, we configure each `google_callback_uri_scheme` per
             flavor in `app/android/app/build.gradle`.
             -->
        <data android:scheme="@string/google_callback_uri_scheme"/>
        </intent-filter>
      </activity>

    </application>

  <queries>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility?hl=en and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <intent>
      <action android:name="android.intent.action.PROCESS_TEXT"/>
      <data android:mimeType="text/plain"/>
      </intent>

    <!-- Required for `url_launcher` to query for other apps that can open
         "bitcoin:" and "lightning:" payment URIs.
         See: <app/lib/share.dart> -->
    <!-- TODO(phlip9): this doesn't work well when Lexe is registered as the
         only handler for these URI schemes. Let's hold onto this for when we
         figure out a more robust solution. -->
    <!-- <intent> <action android:name="android.intent.action.VIEW"/> <data android:scheme="BITCOIN"/> </intent> -->
    <!-- <intent> <action android:name="android.intent.action.VIEW"/> <data android:scheme="LIGHTNING"/> </intent> -->
    <!-- <intent> <action android:name="android.intent.action.VIEW"/> <data android:scheme="bitcoin"/> </intent> -->
    <!-- <intent> <action android:name="android.intent.action.VIEW"/> <data android:scheme="lightning"/> </intent> -->
    </queries>

  <!-- Need network access to talk to remote LEXE node -->
  <uses-permission android:name="android.permission.INTERNET"/>
  </manifest>
