[package]
name = "lexe-ln"
version = "0.1.0"
authors = [
    "Max Fang <protonmail.com@maxfa.ng>",
    "Philip Hayes <philiphayes9@gmail.com>"
]
license = "PolyForm Noncommercial License 1.0.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

# --- LEXE --- #

# Shared code
common = { path = "../common" }

# --- BITCOIN --- #

bitcoin = { version = "0.29", features = ["serde"] }
bitcoin-bech32 = "0.12"
# bech32 = "0.8"
base64 = "0.13.0"
# TODO(max): Switch back to crates.io after:
# (1) SyncTime PR is merged and released
# (2) esplora_client is updated to 0.3
# bdk = { version = "0.25", default-features = false, features = ["async-interface", "use-esplora-async"] }
bdk = { git = "https://github.com/lexe-tech/bdk", default-features = false, features = ["async-interface", "use-esplora-async"], branch = "lexe" }

# --- LIGHTNING --- #

lightning = { version = "0.0.113", features = ["max_level_trace"] }
lightning-invoice = { version = "0.21" }
lightning-net-tokio = { version = "0.0.113" }
# lightning-transaction-sync = { version = "0.0.113", features = ["esplora-async"] }
# TODO(max): Remove once LDK #1870 is merged
lightning-transaction-sync = { git = "https://github.com/lexe-tech/rust-lightning", branch = "lexe-v0.0.113-with-fix-with-tx-sync-v2", features = ["esplora-async"] }

# --- GENERAL --- #

# Ad hoc error definition, easy error propagation, error chains
anyhow = "1"
# async fn's in trait methods
async-trait = "0.1"
# Utils for working with futures
futures = "0.3"
# Conveniently write #[cfg(..)] if-else statements without repeating clauses
cfg-if = "1"
# Async Esplora client
esplora-client = { version = "0.3", default-features = false, features = ["async"] }
# Used to hold a Tokio runtime used by the sync fns in the Persister trait impl
once_cell = "1"
# A wrapper type for carefully handling secrets
secrecy = "0.8"
# Serialization / deserialization framework
serde = { version = "1", features = ["derive"] }
serde_with = { version = "2", default-features = false, features = ["alloc", "hex"] }
serde_json = "1"
# Easy error definition
thiserror = "1"
# Logging
tracing = "0.1"
tracing-core = "0.1"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "std",
    # Enable colored log outputs
    "ansi",
    "fmt",
    "tracing-log",
] }

# --- PATCHED DEPENDENCIES --- #
# - Be sure to use the specific patched versions.
# - See the workspace Cargo.toml for patch declarations.
# - The versions for transitive dependencies (such as hyper, mio, ring, etc) are
#   declared in `common`'s Cargo.toml and propagated to other crates by
#   workspace-level dependency resolution.

tokio = { version = "=1.21.2", default-features = false, features = [
    "io-util",
    "macros",
    "net",
    "rt",
    "sync",
    "time"
] }

[dev-dependencies]
# Shared code
common = { path = "../common", features = ["test-utils"] }
# property based testing
proptest = { version = "1", default-features = false, features = ["alloc"] }
# Arbitrary derive macro
proptest-derive = "0.3"
# Enable test-util feature in tests
tokio = { version = "=1.21.2", default-features = false, features = [
    "io-util",
    "macros",
    "rt",
    "sync",
    "test-util",
    "time"
] }
# Utilities for testing futures
tokio-test = "0.4"

[target.'cfg(not(target_env = "sgx"))'.dev-dependencies]
# Include additional useful proptest features when testing outside of SGX
proptest = "1"
