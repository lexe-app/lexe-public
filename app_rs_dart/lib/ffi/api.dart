// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

//
// From: `dart_preamble` in `app-rs-codegen/src/lib.rs`
// ignore_for_file: invalid_internal_annotation, always_use_package_imports, directives_ordering, prefer_const_constructors, sort_unnamed_constructors_first
//

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'app.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'types.dart';
part 'api.freezed.dart';

// These functions are ignored because they are not marked as `pub`: `from_cid_and_response`, `from_id_and_response`, `from_id_and_response`, `validate_note`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`, `try_from`

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class Balance with _$Balance {
  const factory Balance({
    required int totalSats,
    required int onchainSats,
    required int lightningSats,
    required int lightningUsableSats,
    required int lightningMaxSendableSats,
  }) = _Balance;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CloseChannelRequest with _$CloseChannelRequest {
  const factory CloseChannelRequest({required String channelId}) =
      _CloseChannelRequest;
}

/// See `common::api::revocable_clients::CreateRevocableClientRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateClientRequest with _$CreateClientRequest {
  const factory CreateClientRequest({String? label, required Scope scope}) =
      _CreateClientRequest;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateClientResponse with _$CreateClientResponse {
  const factory CreateClientResponse({
    required RevocableClient client,
    required String credentials,
  }) = _CreateClientResponse;
}

/// See `lexe_api::command::CreateInvoiceRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateInvoiceRequest with _$CreateInvoiceRequest {
  const factory CreateInvoiceRequest({
    required int expirySecs,
    int? amountSats,
    String? description,
  }) = _CreateInvoiceRequest;
}

/// See `lexe_api::command::CreateInvoiceResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateInvoiceResponse with _$CreateInvoiceResponse {
  const factory CreateInvoiceResponse({required Invoice invoice}) =
      _CreateInvoiceResponse;
}

/// See `lexe_api::command::CreateOfferRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateOfferRequest with _$CreateOfferRequest {
  const factory CreateOfferRequest({
    int? expirySecs,
    int? amountSats,
    String? description,
  }) = _CreateOfferRequest;
}

/// See `lexe_api::command::CreateOfferResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class CreateOfferResponse with _$CreateOfferResponse {
  const factory CreateOfferResponse({required Offer offer}) =
      _CreateOfferResponse;
}

/// See `lexe_api::command::FeeEstimate`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class FeeEstimate with _$FeeEstimate {
  const factory FeeEstimate({required int amountSats}) = _FeeEstimate;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class FiatRate with _$FiatRate {
  const factory FiatRate({required String fiat, required double rate}) =
      _FiatRate;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class FiatRates with _$FiatRates {
  const factory FiatRates({
    required int timestampMs,
    required List<FiatRate> rates,
  }) = _FiatRates;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class ListChannelsResponse with _$ListChannelsResponse {
  const factory ListChannelsResponse({
    required List<LxChannelDetails> channels,
  }) = _ListChannelsResponse;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class NodeInfo with _$NodeInfo {
  const factory NodeInfo({
    required String nodePk,
    required String version,
    required String measurement,
    required Balance balance,
  }) = _NodeInfo;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class OpenChannelRequest with _$OpenChannelRequest {
  const factory OpenChannelRequest({
    required UserChannelId userChannelId,
    required int valueSats,
  }) = _OpenChannelRequest;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class OpenChannelResponse with _$OpenChannelResponse {
  const factory OpenChannelResponse({required String channelId}) =
      _OpenChannelResponse;
}

/// Mirrors the `lexe_api::command::PayInvoiceRequest` type.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayInvoiceRequest with _$PayInvoiceRequest {
  const factory PayInvoiceRequest({
    required String invoice,
    int? fallbackAmountSats,
    String? note,
  }) = _PayInvoiceRequest;
}

/// Mirrors `lexe_api::command::PayInvoiceResponse` the type, but enriches
/// the response so we get the full `PaymentIndex`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayInvoiceResponse with _$PayInvoiceResponse {
  const factory PayInvoiceResponse({required PaymentIndex index}) =
      _PayInvoiceResponse;
}

/// See `lexe_api::command::PayOfferResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayOfferRequest with _$PayOfferRequest {
  const factory PayOfferRequest({
    required ClientPaymentId cid,
    required String offer,
    int? fallbackAmountSats,
    String? note,
  }) = _PayOfferRequest;
}

/// See `lexe_api::command::PayOfferResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayOfferResponse with _$PayOfferResponse {
  const factory PayOfferResponse({required PaymentIndex index}) =
      _PayOfferResponse;
}

/// See `lexe_api::command::PayOnchainRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayOnchainRequest with _$PayOnchainRequest {
  const factory PayOnchainRequest({
    required ClientPaymentId cid,
    required String address,
    required int amountSats,
    required ConfirmationPriority priority,
    String? note,
  }) = _PayOnchainRequest;
}

/// See `lexe_api::command::PayOnchainResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PayOnchainResponse with _$PayOnchainResponse {
  const factory PayOnchainResponse({
    required PaymentIndex index,
    required String txid,
  }) = _PayOnchainResponse;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightCloseChannelResponse
    with _$PreflightCloseChannelResponse {
  const factory PreflightCloseChannelResponse({required int feeEstimateSats}) =
      _PreflightCloseChannelResponse;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightOpenChannelRequest with _$PreflightOpenChannelRequest {
  const factory PreflightOpenChannelRequest({required int valueSats}) =
      _PreflightOpenChannelRequest;
}

/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightOpenChannelResponse with _$PreflightOpenChannelResponse {
  const factory PreflightOpenChannelResponse({required int feeEstimateSats}) =
      _PreflightOpenChannelResponse;
}

/// See `lexe_api::command::PreflightPayInvoiceRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayInvoiceRequest with _$PreflightPayInvoiceRequest {
  const factory PreflightPayInvoiceRequest({
    required String invoice,
    int? fallbackAmountSats,
  }) = _PreflightPayInvoiceRequest;
}

/// See `lexe_api::command::PreflightPayInvoiceResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayInvoiceResponse with _$PreflightPayInvoiceResponse {
  const factory PreflightPayInvoiceResponse({
    required int amountSats,
    required int feesSats,
  }) = _PreflightPayInvoiceResponse;
}

/// See `lexe_api::command::PreflightPayOfferRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayOfferRequest with _$PreflightPayOfferRequest {
  const factory PreflightPayOfferRequest({
    required ClientPaymentId cid,
    required String offer,
    int? fallbackAmountSats,
  }) = _PreflightPayOfferRequest;
}

/// See `lexe_api::command::PreflightPayOfferResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayOfferResponse with _$PreflightPayOfferResponse {
  const factory PreflightPayOfferResponse({
    required int amountSats,
    required int feesSats,
  }) = _PreflightPayOfferResponse;
}

/// See `lexe_api::command::PreflightPayOnchainRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayOnchainRequest with _$PreflightPayOnchainRequest {
  const factory PreflightPayOnchainRequest({
    required String address,
    required int amountSats,
  }) = _PreflightPayOnchainRequest;
}

/// See `lexe_api::command::PreflightPayOnchainResponse`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class PreflightPayOnchainResponse with _$PreflightPayOnchainResponse {
  const factory PreflightPayOnchainResponse({
    FeeEstimate? high,
    required FeeEstimate normal,
    required FeeEstimate background,
  }) = _PreflightPayOnchainResponse;
}

/// See `common::api::revocable_clients::UpdateClientRequest`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class UpdateClientRequest with _$UpdateClientRequest {
  const factory UpdateClientRequest({required String pubkey, bool? isRevoked}) =
      _UpdateClientRequest;
}

/// See `common::api::user::UpdatePaymentNote`.
///
/// flutter_rust_bridge:dart_metadata=("freezed")
@freezed
sealed class UpdatePaymentNote with _$UpdatePaymentNote {
  const factory UpdatePaymentNote({required PaymentIndex index, String? note}) =
      _UpdatePaymentNote;
}
