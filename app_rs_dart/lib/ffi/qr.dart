// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

//
// From: `dart_preamble` in `app-rs-codegen/src/lib.rs`
// ignore_for_file: invalid_internal_annotation, always_use_package_imports, directives_ordering, prefer_const_constructors, sort_unnamed_constructors_first
//

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Encode `data` as a QR code, then render it as a .bmp image.
///
/// Returns a self-describing image format (.bmp) and not raw pixel data since
/// that's easier to consume on the Dart side.
///
/// Renders with an opaque white BG and `LxColors.foreground` FG.
///
/// Returns an error if the data is too long to fit in a QR code (input data is
/// longer than 2953 B).
Future<Uint8List> encode({required List<int> data}) =>
    AppRs.instance.api.crateFfiQrEncode(data: data);

/// Return the size in pixels of one side of the encoded QR code for a given
/// input `data.len()` in bytes.
int encodedPixelsPerSide({required int dataLenBytes}) => AppRs.instance.api
    .crateFfiQrEncodedPixelsPerSide(dataLenBytes: dataLenBytes);
