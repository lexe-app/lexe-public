[package]
name = "run-sgx"
version = "0.1.0"
authors = [
    "Max Fang <protonmail.com@maxfa.ng>",
    "Philip Hayes <philiphayes9@gmail.com>"
]
license = "PolyForm Noncommercial License 1.0.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# --- WORKSPACE --- #

anyhow.workspace = true
argh.workspace = true
once_cell.workspace = true
serde.workspace = true
tokio = { workspace = true, features = ["net"] }

# --- GENERAL --- #

# Efficiently find newline byte in byte array
memchr = "2"
# For symbolizing backtrace frames from the enclave
object = { version = "0", default-features = false, features = ["read_core", "compression", "elf"] }
# For demangling backtrace symbols into human-readable format
rustc-demangle = "0"

[target.'cfg(all(target_arch = "x86_64", target_os = "linux"))'.dependencies]
aesm-client.workspace = true
enclave-runner = { workspace = true, features = ["crypto-openssl"] }
sgx-isa.workspace = true
sgxs-loaders.workspace = true

toml = "0"
