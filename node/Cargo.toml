[package]
name = "node"
version = "0.7.7"

authors.workspace = true
edition.workspace = true
license.workspace = true

[features]
# Explicitly specify that no features should be enabled by default.
default = []
# Enables various test hooks and utilities. Should be disabled in staging/prod.
test-utils = ["common/test-utils", "lexe-ln/test-utils"]

[package.metadata.fortanix-sgx]
# When true, return panics w/ backtraces to the host via the shared "debug
# buffer". We need this to debug panics in prod. rust-std also currently saves
# some registers so a debugger can reconstruct the stack.
# NOTE: this is not the same as the SGX platform DEBUG mode, which disables all
# memory protections.
# TODO(phlip9): patch rust-std so it always saves panics w/ backtraces but only
# dumps registers if `debug = true`.
debug = true
# Heap size in bytes. Default: 0x200_0000.
# TODO(max): Switch to allocator which does heap compaction.
# TODO(max): The network graph is taking at least 75MB of memory. User nodes
# share a private routing enclave to reduce the amount of memory required.
# Current: 1 GiB
heap-size = 0x4000_0000
# SSA frame size (in pages) for each thread. Default: 1.
# You normally don't need to change the SSA frame size.
ssaframesize = 1
# Stack size (in bytes) for each thread. Default: 0x2_0000.
# Current: 8MiB
stack-size = 0x80_0000
# The max number of threads we can spawn concurrently inside the SGX enclave.
#
# NOTE: ideally this value should be "threads=1", however, the current fortanix
#       rust-sgx `async_usercalls` implementation requires an extra thread, so
#       until that changes, we're stuck with "threads=2".
#       see: https://github.com/lexe-app/rust-sgx/blob/70d11205fed08e49886bb25a1ea3df19928e8287/async-usercalls/src/queues.rs#L46
threads = 2

[dependencies]

# --- LEXE --- #

common.path = "../common"
const-utils.path = "../const-utils"
gdrive.path = "../gdrive"
hex.path = "../hex"
lexe-api.path = "../lexe-api"
lexe-ln.path = "../lexe-ln"

# --- WORKSPACE --- #

anyhow.workspace = true
arc-swap.workspace = true
async-trait.workspace = true
axum.workspace = true
bitcoin.workspace = true
bytes.workspace = true
cfg-if.workspace = true
futures.workspace = true
lightning.workspace = true
# lightning-invoice.workspace = true
lightning-transaction-sync.workspace = true
secrecy.workspace = true
semver = { workspace = true, features = ["serde"] }
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = [
    "io-util",
    "macros",
    "net",
    "rt",
    "sync",
    "time"
] }
tower = { workspace = true, features = ["util"] } 
tracing.workspace = true

[dev-dependencies]
common = { path = "../common", features = ["test-utils"] }

proptest = { workspace = true, features = ["alloc"] }
proptest-derive.workspace = true
# Tokio features used when testing
tokio = { workspace = true, features = [
    "io-util",
    "macros",
    "rt",
    "sync",
    "test-util", # Used to pause time in inactivity_timer::tests
    "time"
] }
